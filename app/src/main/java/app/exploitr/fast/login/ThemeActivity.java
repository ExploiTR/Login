package app.exploitr.fast.login;


import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;

public class ThemeActivity extends AppCompatActivity {

    public static final int BLUE = 1;
    public static final int VIOLET = 2;
    public static final int DEEPBLUE = 3;
    public static final int INDIGO = 4;
    public static final int GREY = 5;
    public static final int BLUEGREY = 6;
    public static final int RED = 7;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        if (DataMan.getInstance(getBaseContext()).getTheme() == ThemeActivity.VIOLET) {
            setTheme(R.style.AppTheme2);
        } else if (DataMan.getInstance(getBaseContext()).getTheme() == ThemeActivity.DEEPBLUE) {
            setTheme(R.style.AppTheme3);
        } else if (DataMan.getInstance(getBaseContext()).getTheme() == ThemeActivity.INDIGO) {
            setTheme(R.style.AppTheme4);
        } else if (DataMan.getInstance(getBaseContext()).getTheme() == ThemeActivity.GREY) {
            setTheme(R.style.AppTheme5);
        } else if (DataMan.getInstance(getBaseContext()).getTheme() == ThemeActivity.BLUEGREY) {
            setTheme(R.style.AppTheme6);
        } else if (DataMan.getInstance(getBaseContext()).getTheme() == ThemeActivity.RED) {
            setTheme(R.style.AppTheme7);
        }

        setContentView(R.layout.activity_theme);

        if (getSupportActionBar() != null) getSupportActionBar().setTitle("Customize Theme");

        Button setBlue = (Button) findViewById(R.id.setblue);
        Button setViolet = (Button) findViewById(R.id.setviolet);
        Button setDeepBlue = (Button) findViewById(R.id.setdeepblue);
        Button setIndigo = (Button) findViewById(R.id.setindigo);
        Button setGrey = (Button) findViewById(R.id.setgrey);
        Button setBlueGrey = (Button) findViewById(R.id.setbluegrey);
        Button setRed = (Button) findViewById(R.id.setRed);

        setBlue.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View snackView) {
                if (DataMan.getInstance(getBaseContext()).getTheme() != BLUE) {
                    DataMan.getInstance(getBaseContext()).setTheme(BLUE);
                    Snackbar.make(snackView, "Theme-1 has been set.\nChanges will take effect on restart.", Snackbar.LENGTH_SHORT).show();
                    new RestartAlert(ThemeActivity.this).Alert();
                } else {
                    Snackbar.make(snackView, "It's already set.", Snackbar.LENGTH_SHORT).show();
                }
            }
        });

        setViolet.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View snackView) {

                if (DataMan.getInstance(getBaseContext()).getTheme() != VIOLET) {
                    DataMan.getInstance(getBaseContext()).setTheme(VIOLET);
                    Snackbar.make(snackView, "Theme-2 has been set.\nChanges will take effect on restart.", Snackbar.LENGTH_SHORT).show();
                    new RestartAlert(ThemeActivity.this).Alert();
                } else {
                    Snackbar.make(snackView, "It's already set.", Snackbar.LENGTH_SHORT).show();
                }

            }
        });

        setDeepBlue.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View snackView) {

                if (DataMan.getInstance(getBaseContext()).getTheme() != DEEPBLUE) {
                    DataMan.getInstance(getBaseContext()).setTheme(DEEPBLUE);
                    Snackbar.make(snackView, "Theme-3 has been set.\nChanges will take effect on restart.", Snackbar.LENGTH_SHORT).show();
                    new RestartAlert(ThemeActivity.this).Alert();
                } else {
                    Snackbar.make(snackView, "It's already set.", Snackbar.LENGTH_SHORT).show();
                }

            }
        });

        setIndigo.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View snackView) {

                if (DataMan.getInstance(getBaseContext()).getTheme() != INDIGO) {
                    DataMan.getInstance(getBaseContext()).setTheme(INDIGO);
                    Snackbar.make(snackView, "Theme-4 has been set.\nChanges will take effect on restart.", Snackbar.LENGTH_SHORT).show();
                    new RestartAlert(ThemeActivity.this).Alert();
                } else {
                    Snackbar.make(snackView, "It's already set.", Snackbar.LENGTH_SHORT).show();
                }

            }
        });

        setGrey.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View snackView) {

                if (DataMan.getInstance(getBaseContext()).getTheme() != GREY) {
                    DataMan.getInstance(getBaseContext()).setTheme(GREY);
                    Snackbar.make(snackView, "Theme-5 has been set.\nChanges will take effect on restart.", Snackbar.LENGTH_SHORT).show();
                    new RestartAlert(ThemeActivity.this).Alert();
                } else {
                    Snackbar.make(snackView, "It's already set.", Snackbar.LENGTH_SHORT).show();
                }

            }
        });

        setBlueGrey.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View snackView) {

                if (DataMan.getInstance(getBaseContext()).getTheme() != BLUEGREY) {
                    DataMan.getInstance(getBaseContext()).setTheme(BLUEGREY);
                    Snackbar.make(snackView, "Theme-6 has been set.\nChanges will take effect on restart.", Snackbar.LENGTH_SHORT).show();
                    new RestartAlert(ThemeActivity.this).Alert();
                } else {
                    Snackbar.make(snackView, "It's already set.", Snackbar.LENGTH_SHORT).show();
                }

            }
        });

        setRed.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View snackView) {

                if (DataMan.getInstance(getBaseContext()).getTheme() != RED) {
                    DataMan.getInstance(getBaseContext()).setTheme(RED);
                    Snackbar.make(snackView, "Theme-7 has been set.\nChanges will take effect on restart.", Snackbar.LENGTH_SHORT).show();
                    new RestartAlert(ThemeActivity.this).Alert();
                } else {
                    Snackbar.make(snackView, "It's already set.", Snackbar.LENGTH_SHORT).show();
                }

            }
        });

    }

    @Override
    public void finish() {
        super.finish();
        overridePendingTransition(0, R.anim.fade_out);
    }
}
