package app.exploitr.fast.login;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Typeface;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.NavigationView;
import android.support.design.widget.Snackbar;
import android.support.v4.content.ContextCompat;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;
import android.view.View;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import pl.droidsonroids.gif.GifImageView;

public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {

    private WifiManager wifiManager;
    private Button loginAction;
    private DrawerLayout drawer;
    private WebView logindb;
    private GifImageView progress;
    private int z;
    ImageView stat;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //START UI CODES
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        TextView statusText = (TextView)findViewById(R.id.statusText);
        Typeface typeFace = Typeface.createFromAsset(getAssets(),"sfont.ttf");
        statusText.setTypeface(typeFace);

        wifiManager = (WifiManager)getApplicationContext().getSystemService(Context.WIFI_SERVICE);

        final FloatingActionButton fab = (FloatingActionButton)findViewById(R.id.fab);
        if(wifiManager.isWifiEnabled()){ fab.setImageDrawable(ContextCompat.getDrawable(getBaseContext(),R.drawable.fab_back_logout));}
        else{fab.setImageDrawable(ContextCompat.getDrawable(getBaseContext(),R.drawable.fab_back_login));}

        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
            if(!wifiManager.isWifiEnabled()){
                    Snackbar.make(view, "Turning up WLAN", Snackbar.LENGTH_SHORT)
                            .setAction("Action", null).show();
                    wifiManager.setWifiEnabled(true);
                    fab.setImageDrawable(ContextCompat.getDrawable(getBaseContext(),R.drawable.fab_back_logout));
            }else{
                    Snackbar.make(view, "Shutting down WLAN", Snackbar.LENGTH_SHORT)
                            .setAction("Action", null).show();
                    wifiManager.setWifiEnabled(false);
                    fab.setImageDrawable(ContextCompat.getDrawable(getBaseContext(),R.drawable.fab_back_login));
                }
            }
        });

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        //MAIN UI CODES FINISHED

        //MAIN WORK CODE BEGINS

        //REMOVED UPDATE CODE, DON'T THINK IT'S EMBARRASSING

        loginAction = (Button)findViewById(R.id.loginAction);

        logindb = new WebView(this);
        logindb.setWebViewClient(new WebViewClient());
        logindb.getSettings().setJavaScriptEnabled(true);

        progress = (GifImageView)findViewById(R.id.loadingAction);

        stat = (ImageView)findViewById(R.id.stat);

        try {
            if (Status()==0){ stat.setImageResource(R.drawable.isconnected);//server reached
                loginAction.setText("Logout");
                System.out.println("Done Status()");
            } else { stat.setImageResource(R.drawable.isconnectedx);
                System.out.println("Done Status()");}//server is not reachable
        } catch (Exception e) {
            Toast.makeText(this, "Network Error "+ e, Toast.LENGTH_SHORT).show();
            e.printStackTrace();
        }


        loginAction.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v) {


                if(loginAction.getText().toString().equals("Login")){

                    final String GUNAME = DataMan.getInstance(getBaseContext()).getUser();
                    final String GPWD = DataMan.getInstance(getBaseContext()).getPassword();

                    if(GUNAME == null){
                        Toast.makeText(MainActivity.this, "Please Enter Your Username And Password in Login Settings", Toast.LENGTH_SHORT ).show();
                        Intent intent = new Intent(MainActivity.this, SettingsActivity.class);
                        startActivity(intent);
                        System.out.println(intent);}

                    else{

                        System.out.println(GUNAME);
                        System.out.println(GPWD);

                        logindb.loadUrl("http://1.1.1.1/login1.html?a=%3F"+GUNAME+"%2B%2F%40&b=%3F"+GPWD+"%2B%2F%40");                                                  progress.setVisibility(View.VISIBLE);

                        logindb.setWebViewClient(new WebViewClient() {

                            @Override
                            public void onPageFinished(WebView view, String url) {

                                progress.setVisibility(View.INVISIBLE);
                                System.out.println("Login finished");

                                if (Status()==0) { stat.setImageResource(R.drawable.isconnected);
                                    loginAction.setText("Logout");
                                    System.out.println("Success!");

                                }else { stat.setImageResource(R.drawable.isconnectedx);
                                    loginAction.setText("Login");
                                    System.out.println("Fail!");
                                }}});}}
                else{
                    logindb.setWebViewClient(new WebViewClient());
                    logindb.loadUrl("http://1.1.1.1/logout");
                    progress.setVisibility(View.VISIBLE);

                    System.out.println("Logged out");

                    logindb.setWebViewClient(new WebViewClient() {

                        @Override
                        public void onPageFinished(WebView view, String url) {

                            progress.setVisibility(View.INVISIBLE);

                            if (Status()==0) { stat.setImageResource(R.drawable.isconnected);//server reached
                                loginAction.setText("Logout");
                            } else { stat.setImageResource(R.drawable.isconnectedx);
                                loginAction.setText("Login"); //server is not reachable
                            }
                        }});
                }
            }
        });
    }

    private int Status(){

        try {
            Process check = Runtime.getRuntime().exec("ping -c 1 8.8.8.8");
            check.waitFor();
            z = check.exitValue();
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("ZZZZZZZZZZZZZZZZZZZZZ"+z);
        return z;
    }

    @Override
    public void onBackPressed() {
        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this)
                .setMessage("Exit Login ?")
                .setCancelable(true)
                .setPositiveButton(android.R.string.yes,new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
                        if (drawer.isDrawerOpen(GravityCompat.START)) {
                            drawer.closeDrawer(GravityCompat.START);
                        }
                        android.os.Process.killProcess(android.os.Process.myPid());
                    }
                });
        AlertDialog dialog = builder.create();
        dialog.show();
    }


    @Override
    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
        int id = item.getItemId();
        if(id == R.id.nav_settings){
            Intent intent = new Intent(MainActivity.this,SettingsActivity.class);
            startActivity(intent);
        }else if (id == R.id.nav_about) {
            Intent intent = new Intent(MainActivity.this,AboutActivity.class);
            startActivity(intent);
        }else if (id == R.id.nav_share) {
            String shareBody = getResources().getString(R.string.about_body);
            Intent sharingIntent = new Intent(android.content.Intent.ACTION_SEND);
            sharingIntent.setType("text/plain");
            sharingIntent.putExtra(android.content.Intent.EXTRA_TEXT, shareBody);
            startActivity(Intent.createChooser(sharingIntent, "Share about Login"));
        }
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }
}
