package app.exploitr.fast.login;

import java.io.IOException;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Typeface;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;


@SuppressLint({ "SetJavaScriptEnabled", "InflateParams" })
public class MainActivity extends Activity  {
	

	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        final ImageView stat = (ImageView)findViewById(R.id.imageView1);
        final Button logibt = (Button)findViewById(R.id.button1);
        final Button logubt = (Button)findViewById(R.id.button2);
        final TextView txtV = (TextView)findViewById(R.id.textView1);
        final ProgressBar prb = (ProgressBar)findViewById(R.id.progressBar1);
        Typeface typeFace = Typeface.createFromAsset(getAssets(), "sfont.ttf");
        txtV.setTypeface(typeFace);
        logibt.setTypeface(typeFace);
        logubt.setTypeface(typeFace);

        
        
        try{
      	  WifiManager wifi = (WifiManager)this.getSystemService(WIFI_SERVICE); 
      	  boolean b=wifi.isWifiEnabled();
      	  if(b){}
      	  else
      	  {wifi.setWifiEnabled(true);}}finally{}
  	 
        
    	Runtime runtime = Runtime.getRuntime();
        Process proc;
        try {
            proc = runtime.exec("ping -c 1 8.8.8.8");
            proc.waitFor();
            int exit = proc.exitValue();
            if (exit == 0) { stat.setImageResource(R.drawable.isconnected);//server reached
                            logibt.setVisibility(View.INVISIBLE);
                            logubt.setVisibility(View.VISIBLE);
            } else { stat.setImageResource(R.drawable.isconnectedx);//server is not reachable
            }} catch (IOException e) {
				e.printStackTrace();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}finally{}
    
     


      logibt.setOnClickListener(new View.OnClickListener() {
      public void onClick(View v) {
    	  
		    String UNAME = CredentialManager.getInstance(getBaseContext()).getUser();
		    String PWD = CredentialManager.getInstance(getBaseContext()).getPassword();
		   
    
		    try{
			    	 
		    	    if(UNAME == ""){
			    	 			Context context5 = getApplicationContext();
			    	 			CharSequence text5 = "Please Enter Your Username And Password First!";
			    	 			int duration5 = Toast.LENGTH_SHORT;
			    	 			Toast toast5 = Toast.makeText(context5, text5, duration5);
			    	 			toast5.show();
			    	 			Intent intent = new Intent(MainActivity.this, SettingsActivity.class);
			    	 			startActivity(intent);  }
			    	 		
			    	 else{
			             	WebView logindb = (WebView) findViewById(R.id.webView1);
						    logindb.getSettings().setLoadWithOverviewMode(true);
						    logindb.getSettings().setUseWideViewPort(true);
						    logindb.loadUrl("http://1.1.1.1/login1.html?a=%3F"+UNAME+"%2B%2F%40&b=%3F"+PWD+"%2B%2F%40");
						    logindb.setWebViewClient(new WebViewClient());
						    WebSettings webSettings = logindb.getSettings();
						    webSettings.setJavaScriptEnabled(true);// java script is enabled
						    prb.setVisibility(View.VISIBLE);
						    
						    logindb.setWebViewClient(new WebViewClient() {

						    	   public void onPageFinished(WebView view, String url) {
						    	       
						    		   
						    		    prb.setVisibility(View.INVISIBLE);
						    	    	Runtime runtime = Runtime.getRuntime();
						    	        Process proc;
						    	        try {
						    	            proc = runtime.exec("ping -c 1 8.8.8.8");
						    	            proc.waitFor();
						    	            int exit = proc.exitValue();
						    	            if (exit == 0) { stat.setImageResource(R.drawable.isconnected);//server reached
						    	            logibt.setVisibility(View.INVISIBLE);
				                            logubt.setVisibility(View.VISIBLE);
						    	                            Context context4 = getApplicationContext();
						    	            	 			CharSequence text4 = "Connection Established!";
						    	            	 			int duration4 = Toast.LENGTH_SHORT;
						    	            	 			Toast toast4 = Toast.makeText(context4, text4, duration4);
						    	            	 			toast4.show();


						    	            } else { stat.setImageResource(R.drawable.isconnectedx);
						    	            logibt.setVisibility(View.VISIBLE);
				                            logubt.setVisibility(View.INVISIBLE);//server is not reachable
						    	            	Context context1 = getApplicationContext();
						        	 			CharSequence text1 = "Login Failed! Please Check Your Credentials/Ask ISP Executive";
						        	 			int duration1 = Toast.LENGTH_SHORT;
						        	 			Toast toast1 = Toast.makeText(context1, text1, duration1);
						        	 			toast1.show();


						    	            }} catch (IOException e) {
												e.printStackTrace();
											} catch (InterruptedException e) {
												e.printStackTrace();
											}finally{}
						    	    }
						    	});}}finally{}}});
	
	
    logubt.setOnClickListener(new View.OnClickListener() {
    public void onClick(View v) {
   			  
    			WebView logoutdb = (WebView) findViewById(R.id.webView2);
    	        logoutdb.getSettings().setLoadWithOverviewMode(true);
    	        logoutdb.getSettings().setUseWideViewPort(true);
    	        logoutdb.loadUrl("http://1.1.1.1/logout");
    	        logoutdb.setWebViewClient(new WebViewClient());
    	        WebSettings webSettings = logoutdb.getSettings();
    	        webSettings.setJavaScriptEnabled(true);// java script is enabled
    	        prb.setVisibility(View.VISIBLE);
    	        
    	        
    	        logoutdb.setWebViewClient(new WebViewClient() {

    	        	   public void onPageFinished(WebView view, String url) {
    	        		   
    	        		        prb.setVisibility(View.INVISIBLE);
    	        		   
    	          	        try {
    	    	    	    	Runtime runtime = Runtime.getRuntime();
    	    	    	        Process proc;
    	        	            proc = runtime.exec("ping -c 1 8.8.8.8");
    	        	            proc.waitFor();
    	        	            int exit = proc.exitValue();
    	        	            if (exit == 0) { stat.setImageResource(R.drawable.isconnected);//server reached
    	        	            logibt.setVisibility(View.INVISIBLE);
    	                        logubt.setVisibility(View.VISIBLE);
    	        	                            Context context3 = getApplicationContext();
    	        	            	 			CharSequence text3 = "Logout Failed! [RETRY AGAIN ]";
    	        	            	 			int duration3 = Toast.LENGTH_SHORT;
    	        	            	 			Toast toast3 = Toast.makeText(context3, text3, duration3);
    	        	            	 			toast3.show();

    	        	            } else { stat.setImageResource(R.drawable.isconnectedx);
    	        	            logibt.setVisibility(View.VISIBLE);
    	                        logubt.setVisibility(View.INVISIBLE);;//server is not reachable
    	        	            	Context context2 = getApplicationContext();
    	            	 			CharSequence text2 = "Successfully Logged Out!";
    	            	 			int duration2 = Toast.LENGTH_SHORT;
    	            	 			Toast toast2 = Toast.makeText(context2, text2, duration2);
    	            	 			toast2.show();


    	        	            }} catch (IOException e) {
    	    						e.printStackTrace();
    	    					} catch (InterruptedException e) {
    	    						e.printStackTrace();
    	    					}finally{}}
    	        	   
    	        	@SuppressWarnings("unused")
					public void onReceivedError(WebView view, String url){ 
    	        		   
    	        		Context contexterr = getApplicationContext();
           	 			CharSequence texterr = "Connection Error Occured! - Try again later";
           	 			int durationerr = Toast.LENGTH_SHORT;
           	 			Toast toasterr = Toast.makeText(contexterr, texterr, durationerr);
           	 			toasterr.show();}
    	        	
    	        
   });}});}
	
	
	
	

	@Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Creates a menu with items contained in /menu/main.xml
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.main, menu);
        return true;}

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // when MenuItemSelected
        switch (item.getItemId()) {
        case R.id.action_settings:;
        startActivity(new Intent(this, SettingsActivity.class));
            return true;
        default: return super.onOptionsItemSelected(item);
        case R.id.action_about:;
        startActivity(new Intent(this, AboutActivity.class));
            return true;
                   
    }
 }

}
