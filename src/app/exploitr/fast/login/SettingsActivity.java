package app.exploitr.fast.login;


import android.app.Activity;
import android.content.Context;
import android.graphics.Typeface;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import java.security.GeneralSecurityException;
import com.scottyab.aescrypt.AESCrypt;
import app.exploitr.fast.login.R;


public class SettingsActivity extends Activity {


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_settings_data);
        
        
        final EditText utxt = (EditText) findViewById(R.id.usernameput);
        Typeface typeFace = Typeface.createFromAsset(getAssets(), "sfont.ttf");
        utxt.setTypeface(typeFace);
        final EditText ptxt = (EditText) findViewById(R.id.passwordput);
        ptxt.setTypeface(typeFace);
        
        
        
        TextView textView = (TextView) findViewById(R.id.LoginAbout);
        textView.setTypeface(typeFace);
        Button save = (Button) findViewById(R.id.saveData);
		save.setTypeface(typeFace);
        save.setOnClickListener(new View.OnClickListener() {
        	
			public void onClick(View v) {
				
				final String USERNAME = utxt.getText().toString();
				final String PASSWORD = ptxt.getText().toString();
		        
				final String uCrypt = USERNAME;
				final String pCrypt = PASSWORD;
				
		        
            	

            	
            	if (USERNAME.equals("")) {
            		
            		Context context = getApplicationContext();
            		CharSequence text = "Username and Password is RESET";
            		int duration = Toast.LENGTH_LONG;
            		Toast toast = Toast.makeText(context, text, duration);
            		toast.show();
            		LocalCredentialManager.getInstance(getBaseContext()).setUser("");}
            	
            	else {
            		   		
            			try {
        		            String enUname = AESCrypt.encrypt(Build.FINGERPRINT, uCrypt);
        					LocalCredentialManager.getInstance(getBaseContext()).setUser(enUname);
        		        }catch (GeneralSecurityException e){}
        		        try {
        		            final String enPwd = AESCrypt.encrypt(Build.FINGERPRINT,pCrypt);
        		            LocalCredentialManager.getInstance(getBaseContext()).setPassword(enPwd);
        		        }catch (GeneralSecurityException e){}
        		           
            		 		
    		        
            		Context context = getApplicationContext();
            		CharSequence text = "Username is set to = " + USERNAME + System.getProperty ("line.separator") + "Password is set to = "+ PASSWORD;
            		int duration = Toast.LENGTH_LONG;

            		Toast toast = Toast.makeText(context, text, duration);
            		toast.show();}
            	
            	
            	finish();
            	
            }		
			
        });}

    
}
    
	
